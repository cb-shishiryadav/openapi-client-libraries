from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    INVALID_OPERATION = 'INVALID_OPERATION'
    SERVICE_EXCEPTION = 'SERVICE_EXCEPTION'
    SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE'
    SERVICE_LIMIT_EXCEEDED = 'SERVICE_LIMIT_EXCEEDED'
    MISSING_REQUIRED_DATA = 'MISSING_REQUIRED_DATA'
    INVALID_DATA = 'INVALID_DATA'
    INVALID_TYPE = 'INVALID_TYPE'
    INVALID_FORMAT = 'INVALID_FORMAT'
    INVALID_RANGE = 'INVALID_RANGE'
    LOCATION_VALIDATION_FAILED = 'LOCATION_VALIDATION_FAILED'
    def __init__(self):  # noqa: E501
        """ErrorCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'ErrorCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErrorCode of this ErrorCode.  # noqa: E501
        :rtype: ErrorCode
        """
        return util.deserialize_model(dikt, cls)
