from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class TaxExemptType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    PRODUCT_EXEMPT = 'PRODUCT_EXEMPT'
    CUSTOMER_EXEMPT = 'CUSTOMER_EXEMPT'
    REGION_EXEMPT = 'REGION_EXEMPT'
    REVERSE_CHARGE = 'REVERSE_CHARGE'
    ZERO_RATE_TAX = 'ZERO_RATE_TAX'
    HIGH_VALUE_PHYSICAL_GOODS = 'HIGH_VALUE_PHYSICAL_GOODS'
    EXPORT = 'EXPORT'
    ZERO_VALUE_ITEM = 'ZERO_VALUE_ITEM'
    TAX_NOT_CONFIGURED = 'TAX_NOT_CONFIGURED'
    def __init__(self):  # noqa: E501
        """TaxExemptType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'TaxExemptType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TaxExemptType of this TaxExemptType.  # noqa: E501
        :rtype: TaxExemptType
        """
        return util.deserialize_model(dikt, cls)
